version: "3.7"

volumes:
  wiki-http-deps:
  wiki-kafka-deps:

services:
  consul:
    image: bitnami/consul:latest
    ports:
      - '8500:8500'
  zookeeper:
    build:
      dockerfile: ./build/package/dev/zookeeper/Dockerfile
      context: .
    restart: always
    healthcheck:
      test: ["CMD","echo", "stat", "|", "nc", "localhost", "2181"]
      interval: 1m
      retries: 3
      timeout: 30s
      start_period: 30s
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/zookeeper/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - consul
  kafka:
    build:
      dockerfile: ./build/package/dev/kafka/Dockerfile
      context: .
    restart: always
    healthcheck:
      test: ["CMD", "./broker-connected.sh"]
      interval: 1m
      retries: 3
      timeout: 30s
      start_period: 35s
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/kafka/.env
    depends_on:
      - consul
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  wiki-db:
    build:
      dockerfile: ./build/package/dev/wiki-db/Dockerfile
      context: .
      args:
        PG_BACKUP: ${WIKI_PG_BACKUP?err}
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/wiki-db/.env
      - ./build/package/dev/wiki-db/credentials.env
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m
      retries: 3
      timeout: 30s
      start_period: 30s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - consul
  wiki-cache:
    build:
      dockerfile: ./build/package/dev/wiki-cache/Dockerfile
      context: .
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/wiki-cache/.env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m
      retries: 3
      timeout: 30s
      start_period: 30s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - consul
  wiki-http:
    build:
      dockerfile: ./build/package/dev/wiki-http/Dockerfile
      context: .
    ports:
      - ${WIKI_HTTP_PORT?err}:${WIKI_HTTP_PORT?err}
      - ${WIKI_DEBUG_PORT?err}:${WIKI_DEBUG_PORT?err}
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/wiki-http/.env
      - ./build/package/dev/wiki-db/credentials.env
    environment:
      PROJECT_PATH: $PWD
    volumes:
      - $PWD:$PWD
      - wiki-http-deps:/go
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - consul
      - wiki-db
      - wiki-cache
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE
  wiki-kafka:
    build:
      dockerfile: ./build/package/dev/wiki-kafka/Dockerfile
      context: .
    ports:
      - ${WIKI_DEBUG_PORT?}:${WIKI_DEBUG_PORT?}
    env_file:
      - ./build/package/dev/.env
      - ./build/package/dev/wiki-kafka/.env
      - ./build/package/dev/wiki-db/credentials.env
    environment:
      PROJECT_PATH: $PWD
    volumes:
      - $PWD:$PWD
      - wiki-kafka-deps:/go
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - consul
      - wiki-db
      - wiki-cache
      - kafka
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE